plugins {
  id 'java'
  id 'war'
}

group 'com.ra'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.9.2'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

dependencies {
  compileOnly('javax.servlet:javax.servlet-api:4.0.1')
// https://mvnrepository.com/artifact/org.projectlombok/lombok
  compileOnly 'org.projectlombok:lombok:1.18.30'
  annotationProcessor("org.projectlombok:lombok:1.18.30")
// https://mvnrepository.com/artifact/javax.servlet/jstl
  implementation group: 'javax.servlet', name: 'jstl', version: '1.2'
// https://mvnrepository.com/artifact/mysql/mysql-connector-java
  implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.28'
// https://mvnrepository.com/artifact/org.springframework/spring-webmvc
  implementation group: 'org.springframework', name: 'spring-webmvc', version: '5.3.18'
// https://mvnrepository.com/artifact/org.hibernate/hibernate-core
  implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.3.36.Final'
// https://mvnrepository.com/artifact/org.hibernate/hibernate-entitymanager
  implementation group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.3.36.Final'
// https://mvnrepository.com/artifact/org.springframework/spring-orm
  implementation group: 'org.springframework', name: 'spring-orm', version: '5.3.34'
// https://mvnrepository.com/artifact/javax.validation/validation-api
  implementation 'javax.validation:validation-api:2.0.1.Final'
// https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator
  implementation 'org.hibernate.validator:hibernate-validator:6.0.22.Final'
// https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf-spring5
  implementation 'org.thymeleaf:thymeleaf-spring5:3.1.2.RELEASE'
  // https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload
  implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.5'
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
useJUnitPlatform()}